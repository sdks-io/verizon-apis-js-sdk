/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  DeviceDiagnosticsResultError,
} from '../errors/deviceDiagnosticsResultError';
import {
  DiagnosticsSubscription,
  diagnosticsSubscriptionSchema,
} from '../models/diagnosticsSubscription';
import { string } from '../schema';
import { BaseController } from './baseController';

export class DiagnosticsSubscriptionsController extends BaseController {
  /**
   * This endpoint retrieves a diagnostics subscription by account.
   *
   * @param accountName Account identifier.
   * @return Response from the API call
   */
  async getDiagnosticsSubscription(
    accountName: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<DiagnosticsSubscription>> {
    const req = this.createRequest('GET', '/subscriptions');
    req.baseUrl('Device Diagnostics');
    const mapped = req.prepareArgs({ accountName: [accountName, string()] });
    req.query('accountName', mapped.accountName);
    req.defaultToError(DeviceDiagnosticsResultError, 'Error response.');
    return req.callAsJson(diagnosticsSubscriptionSchema, requestOptions);
  }
}
