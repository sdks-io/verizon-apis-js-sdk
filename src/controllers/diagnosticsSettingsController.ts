/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  DeviceDiagnosticsResultError,
} from '../errors/deviceDiagnosticsResultError';
import {
  DiagnosticObservationSetting,
  diagnosticObservationSettingSchema,
} from '../models/diagnosticObservationSetting';
import { array, string } from '../schema';
import { BaseController } from './baseController';

export class DiagnosticsSettingsController extends BaseController {
  /**
   * This endpoint retrieves diagnostics settings synchronously.
   *
   * @param accountName Account identifier.
   * @param devices     Devices list format: [{"id":"{imei1}","kind":"imei"},{"id":"{imei2}","kind":"imei"}].
   * @return Response from the API call
   */
  async listDiagnosticsSettings(
    accountName: string,
    devices: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<DiagnosticObservationSetting[]>> {
    const req = this.createRequest('GET', '/devices/settings');
    req.baseUrl('Device Diagnostics');
    const mapped = req.prepareArgs({
      accountName: [accountName, string()],
      devices: [devices, string()],
    });
    req.query('accountName', mapped.accountName);
    req.query('devices', mapped.devices);
    req.defaultToError(DeviceDiagnosticsResultError, 'Error response.');
    return req.callAsJson(
      array(diagnosticObservationSettingSchema),
      requestOptions
    );
  }
}
