/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ConnectivityManagementResultError,
} from '../errors/connectivityManagementResultError';
import {
  AsynchronousRequestResult,
  asynchronousRequestResultSchema,
} from '../models/asynchronousRequestResult';
import { string } from '../schema';
import { BaseController } from './baseController';

export class AccountRequestsController extends BaseController {
  /**
   * Returns the current status of an asynchronous request that was made for a single device.
   *
   * @param aname     Account name.
   * @param requestId UUID from synchronous response.
   * @return Response from the API call
   */
  async getCurrentAsynchronousRequestStatus(
    aname: string,
    requestId: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<AsynchronousRequestResult>> {
    const req = this.createRequest('GET');
    req.baseUrl('M2M');
    const mapped = req.prepareArgs({
      aname: [aname, string()],
      requestId: [requestId, string()],
    });
    req.appendTemplatePath`/v1/accounts/${mapped.aname}/requests/${mapped.requestId}/status`;
    req.throwOn(400, ConnectivityManagementResultError, 'Error response.');
    return req.callAsJson(asynchronousRequestResultSchema, requestOptions);
  }
}
