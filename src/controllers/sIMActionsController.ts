/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ESIMRestErrorResponseError,
} from '../errors/eSIMRestErrorResponseError';
import {
  ESIMProfileRequest,
  eSIMProfileRequestSchema,
} from '../models/eSIMProfileRequest';
import {
  ESIMRequestResponse,
  eSIMRequestResponseSchema,
} from '../models/eSIMRequestResponse';
import {
  ProfileRequest2,
  profileRequest2Schema,
} from '../models/profileRequest2';
import { BaseController } from './baseController';

export class SIMActionsController extends BaseController {
  /**
   * Uses the profile to activate the SIM.
   *
   * @param body         Device Profile Query
   * @return Response from the API call
   */
  async setactivateUsingPOST(
    body: ESIMProfileRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ESIMRequestResponse>> {
    const req = this.createRequest(
      'POST',
      '/m2m/v1/devices/profile/actions/activate'
    );
    req.baseUrl('Thingspace');
    const mapped = req.prepareArgs({ body: [body, eSIMProfileRequestSchema] });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.throwOn(400, ESIMRestErrorResponseError, 'Bad request');
    req.throwOn(401, ESIMRestErrorResponseError, 'Unauthorized');
    req.throwOn(403, ESIMRestErrorResponseError, 'Forbidden');
    req.throwOn(404, ESIMRestErrorResponseError, 'Not Found / Does not exist');
    req.throwOn(406, ESIMRestErrorResponseError, 'Format / Request Unacceptable');
    req.throwOn(429, ESIMRestErrorResponseError, 'Too many requests');
    req.defaultToError(ESIMRestErrorResponseError, 'Error response');
    req.authenticate([{ oauth2: true }]);
    return req.callAsJson(eSIMRequestResponseSchema, requestOptions);
  }

  /**
   * Uses the profile to deactivate the SIM.
   *
   * @param body         Device Profile Query
   * @return Response from the API call
   */
  async setdeactivateUsingPOST(
    body: ProfileRequest2,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ESIMRequestResponse>> {
    const req = this.createRequest(
      'POST',
      '/m2m/v1/devices/profile/actions/deactivate'
    );
    req.baseUrl('Thingspace');
    const mapped = req.prepareArgs({ body: [body, profileRequest2Schema] });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.throwOn(400, ESIMRestErrorResponseError, 'Bad request');
    req.throwOn(401, ESIMRestErrorResponseError, 'Unauthorized');
    req.throwOn(403, ESIMRestErrorResponseError, 'Forbidden');
    req.throwOn(404, ESIMRestErrorResponseError, 'Not Found / Does not exist');
    req.throwOn(406, ESIMRestErrorResponseError, 'Format / Request Unacceptable');
    req.throwOn(429, ESIMRestErrorResponseError, 'Too many requests');
    req.defaultToError(ESIMRestErrorResponseError, 'Error response');
    req.authenticate([{ oauth2: true }]);
    return req.callAsJson(eSIMRequestResponseSchema, requestOptions);
  }
}
