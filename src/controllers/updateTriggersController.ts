/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ReadySimRestErrorResponseError,
} from '../errors/readySimRestErrorResponseError';
import { RequestTrigger, requestTriggerSchema } from '../models/requestTrigger';
import { Success, successSchema } from '../models/success';
import { optional } from '../schema';
import { BaseController } from './baseController';

export class UpdateTriggersController extends BaseController {
  /**
   * Updates the promotional triggers for pseudo-MDN.
   *
   * @param body         Update the triggers
   * @return Response from the API call
   */
  async updateAllAvailableTriggers(
    body?: RequestTrigger,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<Success>> {
    const req = this.createRequest('PUT', '/m2m/v2/triggers');
    req.baseUrl('Thingspace');
    const mapped = req.prepareArgs({
      body: [body, optional(requestTriggerSchema)],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.defaultToError(ReadySimRestErrorResponseError, 'Error response');
    req.authenticate([{ oauth2: true }]);
    return req.callAsJson(successSchema, requestOptions);
  }
}
