/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  M5gBiactivateRequest,
  m5gBiactivateRequestSchema,
} from '../models/m5gBiactivateRequest';
import {
  M5gBichangeRequest,
  m5gBichangeRequestSchema,
} from '../models/m5gBichangeRequest';
import {
  M5gBideviceDetailsresponse,
  m5gBideviceDetailsresponseSchema,
} from '../models/m5gBideviceDetailsresponse';
import { M5gBideviceId, m5gBideviceIdSchema } from '../models/m5gBideviceId';
import {
  M5gBiRequestResponse,
  m5gBiRequestResponseSchema,
} from '../models/m5gBiRequestResponse';
import { BaseController } from './baseController';
import { M5gBiRestErrorResponseError } from '../errors/m5gBiRestErrorResponseError';

export class M5gBIDeviceActionsController extends BaseController {
  /**
   * Uses the decive's Integrated Circuit Card Identification Number (ICCID) to retrive and display the
   * device's properties.
   *
   * @param body         Device Profile Query
   * @return Response from the API call
   */
  async businessInternetlistDeviceInformation(
    body: M5gBideviceId,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<M5gBideviceDetailsresponse>> {
    const req = this.createRequest('POST', '/actions/list');
    req.baseUrl('Thingspace');
    const mapped = req.prepareArgs({ body: [body, m5gBideviceIdSchema] });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.defaultToError(M5gBiRestErrorResponseError, 'Error response');
    req.authenticate([{ thingspaceOauth: true }, { vZM2mToken: true }]);
    return req.callAsJson(m5gBideviceDetailsresponseSchema, requestOptions);
  }

  /**
   * Uses the device's ICCID and IMEI to activate service.
   *
   * @param body         Activate 5G BI service. Defining
   *                                                    <code>publicIpRestriction</code> as "Unrestricted" or
   *                                                    "Restricted" is required for activating as Public Static. Leave
   *                                                    <code>publicIpRestriction</code> undefined to activate as
   *                                                    Public Dynamic. Removing <code>publicIpRestriction</code> from
   *                                                    the request will activate as Mobile Private Network (MPN).
   * @return Response from the API call
   */
  async businessInternetactivateUsingPOST(
    body: M5gBiactivateRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<M5gBiRequestResponse>> {
    const req = this.createRequest('POST', '/actions/activate');
    req.baseUrl('Thingspace');
    const mapped = req.prepareArgs({
      body: [body, m5gBiactivateRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.defaultToError(M5gBiRestErrorResponseError, 'Error response');
    req.authenticate([{ thingspaceOauth: true }, { vZM2mToken: true }]);
    return req.callAsJson(m5gBiRequestResponseSchema, requestOptions);
  }

  /**
   * Change a device's service plan to use 5G BI.
   *
   * @param body         This endpoint is for use when changing a device's service plan
   *                                                  to a 5G BI service plan. The service plan can change for an
   *                                                  active device up to four times per month but will require address
   *                                                  validation for each change. The service plan cannot be changed
   *                                                  for a device while its service is suspended.
   * @return Response from the API call
   */
  async businessInternetServiceplanchange(
    body: M5gBichangeRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<M5gBiRequestResponse>> {
    const req = this.createRequest('PUT', '/actions/plan');
    req.baseUrl('Thingspace');
    const mapped = req.prepareArgs({ body: [body, m5gBichangeRequestSchema] });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.defaultToError(M5gBiRestErrorResponseError, 'Error response');
    req.authenticate([{ thingspaceOauth: true }, { vZM2mToken: true }]);
    return req.callAsJson(m5gBiRequestResponseSchema, requestOptions);
  }
}
