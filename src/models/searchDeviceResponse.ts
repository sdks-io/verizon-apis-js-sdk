/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import { Fields2, fields2Schema } from './fields2';

/** A success response includes an array of all matching events. Each event includes the full event resource definition. */
export interface SearchDeviceResponse {
  /** The action requested in this event; “change” for device configuration changes. */
  action?: string;
  /** The date and time of the change request. */
  createdon?: string;
  /** The device’s ThingSpace UUID. */
  deviceid?: string;
  /** List of fields affected by the event. */
  fields?: Fields2;
  /** The unique ID of this ts.event.configuration event. */
  id?: string;
  /** The kind of the ThingSpace resource that is being reported; “ts.event.configuration” for device configuration changes. */
  kind?: string;
  /** The date and time that the event was last updated. */
  lastupdated?: string;
  /** The name of the event */
  name?: string;
  /** The current status of the request. */
  state?: string;
  /** UUIDs of tag resources that are applied to this device. */
  tagids?: string[];
  /** transaction id */
  transactionid?: string;
  /** The version of the resource. */
  version?: string;
  /** The version of the resource. */
  versionid?: string;
}

export const searchDeviceResponseSchema: Schema<SearchDeviceResponse> = object({
  action: ['action', optional(string())],
  createdon: ['createdon', optional(string())],
  deviceid: ['deviceid', optional(string())],
  fields: ['fields', optional(lazy(() => fields2Schema))],
  id: ['id', optional(string())],
  kind: ['kind', optional(string())],
  lastupdated: ['lastupdated', optional(string())],
  name: ['name', optional(string())],
  state: ['state', optional(string())],
  tagids: ['tagids', optional(array(string()))],
  transactionid: ['transactionid', optional(string())],
  version: ['version', optional(string())],
  versionid: ['versionid', optional(string())],
});
