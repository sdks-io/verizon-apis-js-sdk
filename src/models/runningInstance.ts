/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { object, optional, Schema, string } from '../schema';
import { ServiceStatusEnum, serviceStatusEnumSchema } from './serviceStatusEnum';

/** Running instance of a service. */
export interface RunningInstance {
  /** Service instance name. */
  instanceName?: string;
  /** Service instance ID. */
  instanceID?: string;
  /** Cloud Service Provider. */
  cSP?: string;
  /** Can have any value as - DRAFT_INPROGRESS, DRAFT_COMPLETE, DESIGN_INPROGRESS, DESIGN_FAILED, DESIGN_COMPLETED, VALIDATION_INPROGRESS,  VALIDATION_FAILED, VALIDATION_COMPLETED, TESTING_INPROGRESS, TESTING_FAILED, TESTING_COMPLETED, READY_TO_USE_INPROGRESS, READY_TO_USE_FAILED, READY_TO_USE_COMPLETED, READY_TO_PRIVATE_USE_INPROGRESS, READY_TO_PRIVATE_USE_FAILED, READY_TO_PRIVATE_USE_COMPLETED,  PUBLISH_INPROGRESS,  PUBLISH_FAILED,  PUBLISH_COMPLETED,  CERTIFY_INPROGRESS,  CERTIFY_FAILED, CERTIFY_COMPLETED, DEPRECATE_INPROGRESS,  DEPRECATE_FAILED, DEPRECATE_COMPLETED, MARKDELETE_INPROGRESS, MARKDELETE_FAILED, MARKDELETE_COMPLETED. */
  status?: ServiceStatusEnum;
}

export const runningInstanceSchema: Schema<RunningInstance> = object({
  instanceName: ['instanceName', optional(string())],
  instanceID: ['instanceID', optional(string())],
  cSP: ['CSP', optional(string())],
  status: ['status', optional(serviceStatusEnumSchema)],
});
