/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { SMSNumber, sMSNumberSchema } from './sMSNumber';

/** The notification details of the trigger. */
export interface Notification {
  /** The type of notification, i.e. 'DailySummary'. */
  notificationType?: string;
  /** Whether or not the notification should be sent via callback.<br />true<br />false. */
  callback?: boolean;
  /** Whether or not the notification should be sent via e-mail.<br />true<br />false. */
  emailNotification?: boolean;
  /** Name for the notification group. */
  notificationGroupName?: string;
  /** Frequency factor for notification. */
  notificationFrequencyFactor?: number;
  /** Frequency interval for notification. */
  notificationFrequencyInterval?: string;
  /** E-mail address(es) where the notification should be delivered. */
  externalEmailRecipients?: string;
  /** SMS notification. */
  smsNotification?: boolean;
  /** List of SMS numbers. */
  smsNumbers?: SMSNumber[];
  reminder?: boolean;
  /** Severity level associated with the notification. Examples would be:<br />Major<br />Minor<br />Critical<br />NotApplicable. */
  severity?: string;
}

export const notificationSchema: Schema<Notification> = object({
  notificationType: ['notificationType', optional(string())],
  callback: ['callback', optional(boolean())],
  emailNotification: ['emailNotification', optional(boolean())],
  notificationGroupName: ['notificationGroupName', optional(string())],
  notificationFrequencyFactor: [
    'notificationFrequencyFactor',
    optional(number()),
  ],
  notificationFrequencyInterval: [
    'notificationFrequencyInterval',
    optional(string()),
  ],
  externalEmailRecipients: ['externalEmailRecipients', optional(string())],
  smsNotification: ['smsNotification', optional(boolean())],
  smsNumbers: ['smsNumbers', optional(array(lazy(() => sMSNumberSchema)))],
  reminder: ['reminder', optional(boolean())],
  severity: ['severity', optional(string())],
});
