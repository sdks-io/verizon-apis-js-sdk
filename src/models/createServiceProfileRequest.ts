/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import { AccessIntents, accessIntentsSchema } from './accessIntents';
import {
  DeploymentLocation,
  deploymentLocationSchema,
} from './deploymentLocation';
import {
  LinkedServiceInstance,
  linkedServiceInstanceSchema,
} from './linkedServiceInstance';
import { PlacementIntents, placementIntentsSchema } from './placementIntents';

export interface CreateServiceProfileRequest {
  /** Name for a service profile. */
  name?: string;
  /** Service being deployed. */
  serviceName?: string;
  /** Service version being deployed. */
  serviceVersion?: string;
  /** Id of particular customer. */
  customerID?: string;
  linkedServiceInstances?: LinkedServiceInstance[];
  accessIntents?: AccessIntents;
  placementIntents?: PlacementIntents;
  deploymentLocations?: DeploymentLocation[];
}

export const createServiceProfileRequestSchema: Schema<CreateServiceProfileRequest> = object(
  {
    name: ['name', optional(string())],
    serviceName: ['serviceName', optional(string())],
    serviceVersion: ['serviceVersion', optional(string())],
    customerID: ['customerID', optional(string())],
    linkedServiceInstances: [
      'linkedServiceInstances',
      optional(array(lazy(() => linkedServiceInstanceSchema))),
    ],
    accessIntents: ['accessIntents', optional(lazy(() => accessIntentsSchema))],
    placementIntents: [
      'placementIntents',
      optional(lazy(() => placementIntentsSchema)),
    ],
    deploymentLocations: [
      'deploymentLocations',
      optional(array(lazy(() => deploymentLocationSchema))),
    ],
  }
);
