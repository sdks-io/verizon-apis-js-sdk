/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { boolean, lazy, object, optional, Schema, string } from '../schema';
import { AccountIdentifier, accountIdentifierSchema } from './accountIdentifier';

/** The details of the subscription that you want to create. */
export interface CreateSubscriptionRequest {
  /** The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`. */
  accountidentifier?: AccountIdentifier;
  /** Descriptive information about the subscription. */
  description?: string;
  /** Enable or disable the subscription. A disabled subscription will not send any data. */
  disabled?: boolean;
  /** The address to which any error reports should be delivered. */
  email?: string;
  /** String containing a $filter object with a property and value to filter out non-matching events. */
  filter?: string;
  billingaccountid?: string;
  /** The type of event data to send via this subscription. This will be `ts.event` in most cases. Other event types are `ts.event.diagnostics` for device diagnostic data, `ts.event.configuration` for device configuration events, or `ts.event.security`. Note that the device ThingSpace client must support sending specific event types for anything other than `ts.event`. */
  streamkind?: string;
  /** The ID of the target resource to be used when dispatching events. The corresponding target should have a “stream” addressscheme. */
  targetid?: string;
  /** Name of the subscription. */
  name?: string;
  /** Setting this value to `false` prevents the data returned from being aggregated and makes the data easier to parse. */
  allowaggregation?: boolean;
}

export const createSubscriptionRequestSchema: Schema<CreateSubscriptionRequest> = object(
  {
    accountidentifier: [
      'accountidentifier',
      optional(lazy(() => accountIdentifierSchema)),
    ],
    description: ['description', optional(string())],
    disabled: ['disabled', optional(boolean())],
    email: ['email', optional(string())],
    filter: ['filter', optional(string())],
    billingaccountid: ['billingaccountid', optional(string())],
    streamkind: ['streamkind', optional(string())],
    targetid: ['targetid', optional(string())],
    name: ['name', optional(string())],
    allowaggregation: ['allowaggregation', optional(boolean())],
  }
);
