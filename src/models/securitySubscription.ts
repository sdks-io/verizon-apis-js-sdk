/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  ExtendedAttributes,
  extendedAttributesSchema,
} from './extendedAttributes';

/** Subscription of the device. */
export interface SecuritySubscription {
  /** Attributes of the subscription. */
  extendedAttributes?: ExtendedAttributes[];
  /** The total number of licenses for this license type that are assigned to device SIMs. */
  licenseAssigned?: number;
  /** The total number of licenses for this license type that are available to assign to device SIMs. */
  licenseAvailable?: number;
  /** The total number of licenses purchased for the license type. */
  licensePurchased?: number;
  /** The license type associated with the skuNumber. */
  licenseType?: string;
  /** The skuNumber that identifies the license type. */
  skuNumber?: string;
}

export const securitySubscriptionSchema: Schema<SecuritySubscription> = object({
  extendedAttributes: [
    'extendedAttributes',
    optional(array(lazy(() => extendedAttributesSchema))),
  ],
  licenseAssigned: ['licenseAssigned', optional(number())],
  licenseAvailable: ['licenseAvailable', optional(number())],
  licensePurchased: ['licensePurchased', optional(number())],
  licenseType: ['licenseType', optional(string())],
  skuNumber: ['skuNumber', optional(string())],
});
