/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import { V3TimeWindow, v3TimeWindowSchema } from './v3TimeWindow';

/** Firmware upgrade information. */
export interface FirmwareCampaign {
  /** Upgrade identifier. */
  id: string;
  /** Account identifier. */
  accountName: string;
  /** Campaign name. */
  campaignName?: string;
  /** Firmware name (for firmware upgrade only). */
  firmwareName?: string;
  /** Old firmware version (for firmware upgrade only). */
  firmwareFrom: string;
  /** New firmware version (for firmware upgrade only). */
  firmwareTo: string;
  /** Available values: LWM2M. */
  protocol: string;
  make: string;
  model: string;
  /** Campaign start date. */
  startDate: string;
  /** Campaign end date. */
  endDate: string;
  /** List of allowed campaign time windows. */
  campaignTimeWindowList?: V3TimeWindow[];
  /** Campaign status. */
  status: string;
}

export const firmwareCampaignSchema: Schema<FirmwareCampaign> = object({
  id: ['id', string()],
  accountName: ['accountName', string()],
  campaignName: ['campaignName', optional(string())],
  firmwareName: ['firmwareName', optional(string())],
  firmwareFrom: ['firmwareFrom', string()],
  firmwareTo: ['firmwareTo', string()],
  protocol: ['protocol', string()],
  make: ['make', string()],
  model: ['model', string()],
  startDate: ['startDate', string()],
  endDate: ['endDate', string()],
  campaignTimeWindowList: [
    'campaignTimeWindowList',
    optional(array(lazy(() => v3TimeWindowSchema))),
  ],
  status: ['status', string()],
});
