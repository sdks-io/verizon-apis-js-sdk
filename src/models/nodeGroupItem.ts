/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { NodeGroupItemTag, nodeGroupItemTagSchema } from './nodeGroupItemTag';
import { NodeLabel, nodeLabelSchema } from './nodeLabel';
import { Provision, provisionSchema } from './provision';
import { UpgradeInfo, upgradeInfoSchema } from './upgradeInfo';
import { VersionInfo, versionInfoSchema } from './versionInfo';

export interface NodeGroupItem {
  name?: string;
  createdAt?: string;
  modifiedAt?: string;
  organizationId?: string;
  partnerId?: string;
  instanceType?: string;
  edgeId?: string;
  id?: string;
  provisionId?: string;
  nodeType?: string;
  nodes?: number;
  nodesMin?: number;
  nodesMax?: number;
  nodeVolumeSize?: number;
  nodeVolumeType?: string;
  nodePrivateNetworking?: boolean;
  nodeZones?: string[];
  nodeAmiFamily?: string;
  nodeLabels?: NodeLabel;
  nodegroupType?: number;
  enableAsgAccess?: boolean;
  enableFullAccessToEcr?: boolean;
  versionInfoId?: string;
  upgradeInfoId?: string;
  tags?: NodeGroupItemTag;
  configFileContent?: string;
  provision?: Provision;
  versionInfo?: VersionInfo;
  upgradeInfo?: UpgradeInfo;
}

export const nodeGroupItemSchema: Schema<NodeGroupItem> = object({
  name: ['name', optional(string())],
  createdAt: ['created_at', optional(string())],
  modifiedAt: ['modified_at', optional(string())],
  organizationId: ['organization_id', optional(string())],
  partnerId: ['partner_id', optional(string())],
  instanceType: ['instance_type', optional(string())],
  edgeId: ['edge_id', optional(string())],
  id: ['id', optional(string())],
  provisionId: ['provision_id', optional(string())],
  nodeType: ['node_type', optional(string())],
  nodes: ['nodes', optional(number())],
  nodesMin: ['nodes_min', optional(number())],
  nodesMax: ['nodes_max', optional(number())],
  nodeVolumeSize: ['node_volume_size', optional(number())],
  nodeVolumeType: ['node_volume_type', optional(string())],
  nodePrivateNetworking: ['node_private_networking', optional(boolean())],
  nodeZones: ['node_zones', optional(array(string()))],
  nodeAmiFamily: ['node_ami_family', optional(string())],
  nodeLabels: ['node_labels', optional(lazy(() => nodeLabelSchema))],
  nodegroupType: ['nodegroup_type', optional(number())],
  enableAsgAccess: ['enable_asg_access', optional(boolean())],
  enableFullAccessToEcr: ['enable_full_access_to_ecr', optional(boolean())],
  versionInfoId: ['version_info_id', optional(string())],
  upgradeInfoId: ['upgrade_info_id', optional(string())],
  tags: ['tags', optional(lazy(() => nodeGroupItemTagSchema))],
  configFileContent: ['config_file_content', optional(string())],
  provision: ['provision', optional(lazy(() => provisionSchema))],
  versionInfo: ['version_info', optional(lazy(() => versionInfoSchema))],
  upgradeInfo: ['upgrade_info', optional(lazy(() => upgradeInfoSchema))],
});
