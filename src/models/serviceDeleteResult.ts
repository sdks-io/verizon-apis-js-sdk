/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema } from '../schema';
import { DependentService, dependentServiceSchema } from './dependentService';
import {
  EdgeServiceOnboardingResult,
  edgeServiceOnboardingResultSchema,
} from './edgeServiceOnboardingResult';
import { RunningInstance, runningInstanceSchema } from './runningInstance';
import { SelectedService, selectedServiceSchema } from './selectedService';

/** Response to delete a service. */
export interface ServiceDeleteResult {
  /** Service which is selected. */
  selectedService?: SelectedService;
  /** List of dependent services. */
  dependentService?: DependentService[];
  /** List of running Instance. */
  runningInstances?: RunningInstance[];
  /** Error response attribute of a service. */
  errorDetails?: EdgeServiceOnboardingResult;
}

export const serviceDeleteResultSchema: Schema<ServiceDeleteResult> = object({
  selectedService: [
    'selectedService',
    optional(lazy(() => selectedServiceSchema)),
  ],
  dependentService: [
    'dependentService',
    optional(array(lazy(() => dependentServiceSchema))),
  ],
  runningInstances: [
    'runningInstances',
    optional(array(lazy(() => runningInstanceSchema))),
  ],
  errorDetails: [
    'errorDetails',
    optional(lazy(() => edgeServiceOnboardingResultSchema)),
  ],
});
