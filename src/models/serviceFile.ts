/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { object, optional, Schema, string } from '../schema';

/** Response to get file of a service. */
export interface ServiceFile {
  /** System generated unique UUID. */
  id?: string;
  /** Service name to which the file is going to be associated. */
  serviceName?: string;
  /** Version of the service being used. */
  serviceVersion?: string;
  /** File which is to be uploaded should be provided in formData. */
  file?: string;
  /** Name of the workload being used in the service. */
  categoryName?: string;
  /** Version of the workload being used in the service. */
  categoryVersion?: string;
  /** Type of the workload being used in the service eg: use WORKLOAD_TGZ to upload the workload file in tgz format. */
  categoryType?: string;
  /** Gives the success and failure response for the validation. */
  validationStatus?: string;
  /** System captured creation date and time when tag is created. */
  createdDate?: string;
  /** System captured date and time when the tag was last modified. */
  lastModifiedDate?: string;
  /** User information who created the tag. */
  createdBy?: string;
  /** Last user information who made changes to tag. */
  updatedBy?: string;
}

export const serviceFileSchema: Schema<ServiceFile> = object({
  id: ['id', optional(string())],
  serviceName: ['serviceName', optional(string())],
  serviceVersion: ['serviceVersion', optional(string())],
  file: ['file', optional(string())],
  categoryName: ['categoryName', optional(string())],
  categoryVersion: ['categoryVersion', optional(string())],
  categoryType: ['categoryType', optional(string())],
  validationStatus: ['validationStatus', optional(string())],
  createdDate: ['createdDate', optional(string())],
  lastModifiedDate: ['lastModifiedDate', optional(string())],
  createdBy: ['createdBy', optional(string())],
  updatedBy: ['updatedBy', optional(string())],
});
