/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { IPPool, iPPoolSchema } from './iPPool';
import { ServicePlan, servicePlanSchema } from './servicePlan';

/** Returns information about a specified account. */
export interface Account {
  /** The name of the account. */
  accountName?: string;
  /** The billing number of the account. */
  accountNumber?: string;
  /** The name of the organization that the account is part of. */
  organizationName?: string;
  /** True if devices can be added to the account and activated with a single request. False if devices must be added to the account before they can be activated. */
  isProvisioningAllowed?: boolean;
  /** The names of all carriers for the account. */
  carriers?: string[];
  /** The names of features that are enabled for the account. */
  features?: string[];
  /** Array of IP pools that are available to the account. */
  iPPools?: IPPool[];
  /** Array of service plans that are available to the account. */
  servicePlans?: ServicePlan[];
}

export const accountSchema: Schema<Account> = object({
  accountName: ['accountName', optional(string())],
  accountNumber: ['accountNumber', optional(string())],
  organizationName: ['organizationName', optional(string())],
  isProvisioningAllowed: ['isProvisioningAllowed', optional(boolean())],
  carriers: ['carriers', optional(array(string()))],
  features: ['features', optional(array(string()))],
  iPPools: ['iPPools', optional(array(lazy(() => iPPoolSchema)))],
  servicePlans: [
    'servicePlans',
    optional(array(lazy(() => servicePlanSchema))),
  ],
});
