/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, number, object, optional, Schema, string } from '../schema';
import {
  HistorySearchFilter,
  historySearchFilterSchema,
} from './historySearchFilter';
import {
  HistorySearchLimitTime,
  historySearchLimitTimeSchema,
} from './historySearchLimitTime';

/** Used to filter data by time period or number of devices. */
export interface HistorySearchRequest {
  /** The selected device and attributes for which a request should retrieve data. */
  filter: HistorySearchFilter;
  /** The maximum number of historical attributes to include in the response. If the request matches more than this number of attributes, the response will contain an X-Next value in the header that can be used as the page value in the next request to retrieve the next page of events. */
  limitNumber?: number;
  /** The time period for which a request should retrieve data, beginning with the limitTime.startOn and proceeding with the limitTime.duration. */
  limitTime?: HistorySearchLimitTime;
  /** Page number for pagination purposes. */
  page?: string;
}

export const historySearchRequestSchema: Schema<HistorySearchRequest> = object({
  filter: ['$filter', lazy(() => historySearchFilterSchema)],
  limitNumber: ['$limitNumber', optional(number())],
  limitTime: ['$limitTime', optional(lazy(() => historySearchLimitTimeSchema))],
  page: ['$page', optional(string())],
});
