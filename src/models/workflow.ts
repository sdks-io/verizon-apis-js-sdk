/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import { CustomWf, customWfSchema } from './customWf';
import { InstallationWf, installationWfSchema } from './installationWf';
import { OperationsWf, operationsWfSchema } from './operationsWf';
import { WorkflowTypeEnum, workflowTypeEnumSchema } from './workflowTypeEnum';

/** Workflow attribute of a service. */
export interface Workflow {
  /** The service version workflow name. */
  name: string;
  /** The service version workflow value. */
  version: string;
  /** Auto-generated UUID for each workdflow triggered. */
  id?: string;
  /** Service type e.g. Installation, Operations, Custom. */
  type?: WorkflowTypeEnum;
  /** `installationWf` attribute of a service. */
  installationWf?: InstallationWf;
  /** `operationsWf` attribute of a service. */
  operationsWf?: OperationsWf;
  /** `customWf` attribute of a service. */
  customWf?: CustomWf;
  /** Files which are being generated. */
  files?: string[];
  /** Status of the workflow. */
  status?: string;
  /** The date on which the workflow is created. */
  createdDate?: string;
  /** The date when the created workflow was last modified. */
  lastModifiedDate?: string;
  /** Identity of the user who created the workflow. */
  createdBy?: string;
  /** Identity of the user who updated the workflow. */
  updatedBy?: string;
}

export const workflowSchema: Schema<Workflow> = object({
  name: ['name', string()],
  version: ['version', string()],
  id: ['id', optional(string())],
  type: ['type', optional(workflowTypeEnumSchema)],
  installationWf: [
    'installationWf',
    optional(lazy(() => installationWfSchema)),
  ],
  operationsWf: ['operationsWf', optional(lazy(() => operationsWfSchema))],
  customWf: ['customWf', optional(lazy(() => customWfSchema))],
  files: ['files', optional(array(string()))],
  status: ['status', optional(string())],
  createdDate: ['createdDate', optional(string())],
  lastModifiedDate: ['lastModifiedDate', optional(string())],
  createdBy: ['createdBy', optional(string())],
  updatedBy: ['updatedBy', optional(string())],
});
