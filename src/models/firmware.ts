/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { object, optional, Schema, string } from '../schema';

/** Firmware information. */
export interface Firmware {
  /** The name of the firmware image, provided by the device manufacturer. */
  firmwareName?: string;
  /** Internal reference; can be ignored. */
  participantName?: string;
  /** The release date of the firmware image. */
  launchDate?: string;
  /** Additional information about the release. */
  releaseNote?: string;
  /** The device model that the firmware applies to. */
  model?: string;
  /** The device make that the firmware applies to. */
  make?: string;
  /** The firmware version that must currently be on the device to upgrade. */
  fromVersion?: string;
  /** The firmware version that will be on the device after an upgrade. */
  toVersion?: string;
}

export const firmwareSchema: Schema<Firmware> = object({
  firmwareName: ['firmwareName', optional(string())],
  participantName: ['participantName', optional(string())],
  launchDate: ['launchDate', optional(string())],
  releaseNote: ['releaseNote', optional(string())],
  model: ['model', optional(string())],
  make: ['make', optional(string())],
  fromVersion: ['fromVersion', optional(string())],
  toVersion: ['toVersion', optional(string())],
});
