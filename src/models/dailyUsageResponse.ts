/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, boolean, lazy, object, optional, Schema } from '../schema';
import {
  DailyUsageHistory,
  dailyUsageHistorySchema,
} from './dailyUsageHistory';
import { GIODeviceId, gIODeviceIdSchema } from './gIODeviceId';

export interface DailyUsageResponse {
  /** A flag set to indicate if there is more than one page of data returned by the query (true) or if only one page of data returned (false) */
  hasMoreData?: boolean;
  deviceId?: GIODeviceId;
  usageHistory?: DailyUsageHistory[];
}

export const dailyUsageResponseSchema: Schema<DailyUsageResponse> = object({
  hasMoreData: ['hasMoreData', optional(boolean())],
  deviceId: ['deviceId', optional(lazy(() => gIODeviceIdSchema))],
  usageHistory: [
    'usageHistory',
    optional(array(lazy(() => dailyUsageHistorySchema))),
  ],
});
