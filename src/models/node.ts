/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';

export interface Node {
  name?: string;
  createdAt?: string;
  modifiedAt?: string;
  nodeId?: string;
  privateIp?: string;
  numCores?: number;
  totalMemory?: number;
  clusterId?: string;
  roles?: string[];
  id?: string;
  approved?: boolean;
  status?: string;
}

export const nodeSchema: Schema<Node> = object({
  name: ['name', optional(string())],
  createdAt: ['created_at', optional(string())],
  modifiedAt: ['modified_at', optional(string())],
  nodeId: ['node_id', optional(string())],
  privateIp: ['private_ip', optional(string())],
  numCores: ['num_cores', optional(number())],
  totalMemory: ['total_memory', optional(number())],
  clusterId: ['cluster_id', optional(string())],
  roles: ['roles', optional(array(string()))],
  id: ['id', optional(string())],
  approved: ['approved', optional(boolean())],
  status: ['status', optional(string())],
});
