/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  ClusterStatusExtra,
  clusterStatusExtraSchema,
} from './clusterStatusExtra';
import { ConditionItem, conditionItemSchema } from './conditionItem';
import { NodeStatusItem, nodeStatusItemSchema } from './nodeStatusItem';
import { StatusProjectItem, statusProjectItemSchema } from './statusProjectItem';

export interface ClusterStatus {
  conditions?: ConditionItem[];
  token?: string;
  publishedBlueprint?: string;
  nodes?: NodeStatusItem[];
  systemTaskCount?: number;
  customTaskCount?: number;
  auxiliaryTaskCount?: number;
  projects?: StatusProjectItem[];
  extra?: ClusterStatusExtra;
}

export const clusterStatusSchema: Schema<ClusterStatus> = object({
  conditions: ['conditions', optional(array(lazy(() => conditionItemSchema)))],
  token: ['token', optional(string())],
  publishedBlueprint: ['publishedBlueprint', optional(string())],
  nodes: ['nodes', optional(array(lazy(() => nodeStatusItemSchema)))],
  systemTaskCount: ['systemTaskCount', optional(number())],
  customTaskCount: ['customTaskCount', optional(number())],
  auxiliaryTaskCount: ['auxiliaryTaskCount', optional(number())],
  projects: ['projects', optional(array(lazy(() => statusProjectItemSchema)))],
  extra: ['extra', optional(lazy(() => clusterStatusExtraSchema))],
});
