/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { boolean, lazy, object, optional, Schema } from '../schema';
import { ResourceBase, resourceBaseSchema } from './resourceBase';

/** Resource of the service. */
export interface ServiceResource {
  /** Resource Base of the service. */
  computeResources?: ResourceBase;
  /** GPU required or not for onboarding service. */
  gpuRequired?: boolean;
  /** Resource Base of the service. */
  gpu?: ResourceBase;
  /** Resource Base of the service. */
  storage?: ResourceBase;
  /** Resource Base of the service. */
  memory?: ResourceBase;
  /** Resource Base of the service. */
  latency?: ResourceBase;
  /** Resource Base of the service. */
  requestRate?: ResourceBase;
  /** Resource Base of the service. */
  bandwidth?: ResourceBase;
}

export const serviceResourceSchema: Schema<ServiceResource> = object({
  computeResources: [
    'computeResources',
    optional(lazy(() => resourceBaseSchema)),
  ],
  gpuRequired: ['gpuRequired', optional(boolean())],
  gpu: ['gpu', optional(lazy(() => resourceBaseSchema))],
  storage: ['storage', optional(lazy(() => resourceBaseSchema))],
  memory: ['memory', optional(lazy(() => resourceBaseSchema))],
  latency: ['latency', optional(lazy(() => resourceBaseSchema))],
  requestRate: ['requestRate', optional(lazy(() => resourceBaseSchema))],
  bandwidth: ['bandwidth', optional(lazy(() => resourceBaseSchema))],
});
