/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { ServiceUsage, serviceUsageSchema } from './serviceUsage';

/** Bill usage report. */
export interface BillableUsageReport {
  /** Account identifier. */
  accountName?: string;
  /** The usage is for a single or multiple accounts. */
  usageForAllAccounts?: boolean;
  /** SKU Name of the service subscription. */
  skuName?: string;
  /** The number of location requests included with the subscription type. */
  transactionsAllowed?: string;
  /** The total number of billable device location requests during the reporting period from all included accounts. */
  totalTransactionCount?: string;
  primaryAccount?: ServiceUsage;
  /** Zero or more managed accounts. */
  managedAccounts?: ServiceUsage[];
}

export const billableUsageReportSchema: Schema<BillableUsageReport> = object({
  accountName: ['accountName', optional(string())],
  usageForAllAccounts: ['usageForAllAccounts', optional(boolean())],
  skuName: ['skuName', optional(string())],
  transactionsAllowed: ['transactionsAllowed', optional(string())],
  totalTransactionCount: ['totalTransactionCount', optional(string())],
  primaryAccount: ['PrimaryAccount', optional(lazy(() => serviceUsageSchema))],
  managedAccounts: [
    'ManagedAccounts',
    optional(array(lazy(() => serviceUsageSchema))),
  ],
});
